# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: choshsh

on:
  pull_request:
    branches: [ master ]
  push:
    branches: [ master ]
    paths-ignore:
      - '**.md'
      - '.github/**'
      - 'docs/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-node@v4
        with:
          node-version: '16'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - uses: actions/cache@v4
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: Install NPM Dependencies
        working-directory: ./front-end
        run: yarn install --frozen-lockfile

      - name: Build Front-end
        working-directory: ./front-end
        run: yarn build

      - uses: actions/setup-java@v4
        with:
          distribution: 'corretto'
          java-version: '21'

      - uses: actions/cache@v4
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Test with Gradle
        if: ${{ github.ref_name != 'master' }}
        run: ./gradlew clean test

      - name: Publish Unit Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: ${{ github.ref_name != 'master' }}
        with:
          junit_files: build/test-results/**/*.xml

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: true
          tags: choshsh/choshsh-ui:${{ github.sha }}
          platforms: linux/amd64
          cache-from: type=gha
          cache-to: type=gha,mode=max

#  docs:
#    runs-on: ubuntu-latest
#    if: ${{ github.event_name == 'push' }}
#    needs: [ build ]
#    steps:
#      - uses: actions/checkout@v4
#
#      - uses: actions/setup-java@v4
#        with:
#          distribution: 'corretto'
#          java-version: '17'
#
#      - uses: actions/cache@v4
#        with:
#          path: |
#            ~/.gradle/caches
#            ~/.gradle/wrapper
#          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
#          restore-keys: |
#            ${{ runner.os }}-gradle-
#
#      - name: Grant execute permission for gradlew
#        run: chmod +x gradlew
#
#      - name: Generate api docs
#        run: ./gradlew clean resolveMainClassName generateOpenApiDocs generateSwaggerCode -Dspring.profiles.active=dev
#
#      - name: Commit
#        run: |
#          git config --local user.email "cho911115@gmail.com"
#          git config --local user.name "choshsh"
#          git add --all
#          git commit -m "Build & Deploy to GitHub Pages"
#
#      - name: Push build-artifacts
#        uses: ad-m/github-push-action@master
#        with:
#          github_token: ${{ secrets.GITHUB_TOKEN }}
#          branch: docs
#          force: true
