plugins {
  id 'org.springframework.boot' version '2.7.1'
  id 'io.spring.dependency-management' version '1.0.11.RELEASE'
  id 'java'
  id 'com.google.cloud.tools.jib' version '3.2.1'
}

group = 'com.choshsh'
version = '0.0.1-SNAPSHOT'

sourceCompatibility = '17'

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  mavenCentral()
}

// 이미지 태그 설정
def imageTags = []
if (project.hasProperty("tag")) imageTags.add(project.getProperty("tag"))

jib {
  from {
    image = "amazoncorretto:17"
  }
  to {
    image = "choshsh/choshsh-ui"
    tags = imageTags
  }
  container {
    creationTime = "USE_CURRENT_TIMESTAMP"
    jvmFlags = ['-Dspring.profiles.active=prod', '-XX:+UseContainerSupport', '-Dserver.port=8080', '-Dfile.encoding=UTF-8']
    ports = ['8080']
    labels = [maintainer: 'choshsh <cho911115@gmail.com>']
    user = "1000:1000"
  }
}


dependencies {
  implementation 'org.springframework.boot:spring-boot-starter-actuator'
  implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
  implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
  implementation 'org.springframework.boot:spring-boot-starter-web'
  implementation 'org.springframework.boot:spring-boot-starter-webflux'
  implementation 'io.micrometer:micrometer-registry-prometheus:1.9.2'
  implementation 'io.springfox:springfox-boot-starter:3.0.0'
  compileOnly 'org.projectlombok:lombok'
  runtimeOnly 'mysql:mysql-connector-java'
  runtimeOnly 'com.h2database:h2'
  annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
  annotationProcessor 'org.projectlombok:lombok'
  testAnnotationProcessor 'org.projectlombok:lombok'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'
}

test {
  useJUnitPlatform()
}

bootRun {
  String activeProfile = System.properties['spring.profiles.active']
  systemProperty "spring.profiles.active", activeProfile
}
